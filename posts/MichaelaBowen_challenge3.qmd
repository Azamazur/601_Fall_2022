---
title: "Challenge 3"
author: "Michaela Bowen"
desription: "Tidy Data: Pivoting"
date: "09/26/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
  - animal_weights
  - eggs
  - australian_marriage
  - usa_households
  - sce_labor
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(readxl)
library(readr)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2.  identify what needs to be done to tidy the current data
3.  anticipate the shape of pivoted data
4.  pivot the data into tidy format using `pivot_longer`

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

-   animal_weights.csv ⭐
-   eggs_tidy.csv ⭐⭐ or organiceggpoultry.xls ⭐⭐⭐
-   australian_marriage\*.xls ⭐⭐⭐
-   USA Households\*.xlsx ⭐⭐⭐⭐
-   sce_labor_chart_data_public.xlsx 🌟🌟🌟🌟🌟

```{r, eval=FALSE}
organiceggpoultry <- read_excel("_data/organiceggpoultry.xls",
                                skip = 5,
                                col_names = c("month/year", "XL dozen", "XL half dozen","L dozen", "L half dozen", "delete", "whole chicken", "boneless/skinless chicken breast", "bone-in breast", "whole leg", "thighs")
                                )%>%
  select(!contains("delete"))%>%
  #split month/year variables
  #change "too few" values in b/s chicken breast and thigh columns to NA
  pivot_longer(cols = c("XL dozen", "XL half dozen","L dozen", "L half dozen", "whole chicken", "boneless/skinless chicken breast", "bone-in breast", "whole leg", "thighs"),
               names_to = "size_and_quantity",
               values_to = "value")
#mutate new variable "poultry or eggs"

organiceggpoultry
```

 
```{r}
library(readr)
eggs <- read_csv("_data/eggs_tidy.csv")
  
eggs
```

### Briefly describe the data

Above I have read in the *eggs_tidy* dataset. Upon observsation, I noticed there were 6 variables. We can see that the amount and size of eggs(L,XL, Dozen or Half Dozen) are determined by the independent variables month and year. The data ranges from January of 2004 to December of 2013. I plant to pivot the data set longer in order to group by month, year or type of product. This way I can get means, averages, standard deviations, etc on the amount produces based on a certain timeframe.

## Anticipate the End Result

The first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.

One easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.

Suppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!

### Example: find current and future data dimensions

Lets see if this works with a simple example.

```{r}
#| tbl-cap: Example

df<-tibble(country = rep(c("Mexico", "USA", "France"),2),
           year = rep(c(1980,1990), 3), 
           trade = rep(c("NAFTA", "NAFTA", "EU"),2),
           outgoing = rnorm(6, mean=1000, sd=500),
           incoming = rlogis(6, location=1000, 
                             scale = 400))
df

#existing rows/cases
nrow(df)

#existing columns/cases
ncol(df)

#expected rows/cases
nrow(df) * (ncol(df)-3)

# expected columns 
3 + 2
```

Or simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.

### Challenge: Describe the final dimensions

In our simple example we have 5 variables to start with, to determine the dimensions of our new dataframe we must identify the dependent and independent variables. In this case *outgoing* and *ingoing* are dependent variables that depend on *country*, *year* and *trade*, the independent variables. The final dimensions after pivoting our data will show 12 rows, with 5 columns, 12 instances of 5 variables.

```{r}
dim(df)

```

Before pivoting the data, the cases were harder to identify, the dependent variables were listed as columns. Pivoting the data makes the cases clear, tidy and readable.

## Pivot the Data

Now we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a "sanity" check.

### Example

```{r}
#| tbl-cap: Pivoted Example

df<-pivot_longer(df, col = c(outgoing, incoming),
                 names_to="trade_direction",
                 values_to = "trade_value")
df
```

Yes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!

### Challenge: Pivot the Chosen Data

Document your work here. What will a new "case" be once you have pivoted the data? How does it meet requirements for tidy data?

Below are the expected dimensions after pivoting the eggs_tidy data. The new variables *l/xl_half/whole_dozens*, and *dozens_quantity* are more helpful in determining information from this dataset. Each case is now determined by year and month, and the size and quantity of the produce depend on those specific variables. It is now easier to group by time, and type of product as well.

```{r}
#existing rows
nrow(eggs)
#existing columns
ncol(eggs)
#dataframe dimensions algorithm
#expected rows
nrow(eggs) * ((ncol(eggs)-2))
#expected columns
2+4
#pivoting data
pivot_longer(eggs, cols = c("large_half_dozen","large_dozen","extra_large_half_dozen","extra_large_dozen"),
               names_to = "l/xl_half/whole_dozens",
               values_to = "dozens_quantity"
               )
eggs
#new dimensions of the eggs data
dim(eggs)

```

Any additional comments?
