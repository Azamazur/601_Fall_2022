{
  "hash": "0b48569c6e996265f909c19fb7d3c9c7",
  "result": {
    "markdown": "---\ntitle: \"Homework 2\"\nauthor: \"Emma Narkewicz\"\ndescription: \"Something to describe what I did\"\ndate: \"10/16/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - hw2\n  - emma_narkewicz\n  - medicaid\n  - drug_prices\n  \n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Read in Data\n\nI chose to read in the \"Medicaid by Drug\" data set from the Center's for Medicare and Medicaid Services (CMS) website. I selected this data-set for several reasons. First, I'm passionate about health policy and the price of pharmaceuticals in the U.S. is exorbitant. Additionally, the data set is a reasonable size to work with, with 15,972 rows and 36 columns. Lastly, the data set is challenging to work with as it requires a thorough application of data wrangling techniques I've learned so far in this class. There are many columns that need to be removed or consolidated, dates that need to be separated from column headers, and summary rows and columns that must be dealt with.\n\nWhen reading in the data, I chose to remove the 12 columns containing averages, as those can be recalculated. Additionally, I chose to remove the 5 columns containing outlier flags for each of the 5 years between 2016 - 2020. These flags indicated when a drug's average spending per dosage unit were significantly impacted by an outlier. As I will recalculate the averages my self and can assess the presence of any outliers, I will keep an eye out for outliers in future analysis, but will remove these columns to more easily view the data.\n\nFinally, I renamed several variables to make future wrangling easier during the read in step. I renamed \"Tot_Mftr\" to \"Mfters_Count\" to be able to sort for totals without selecting this column. I also renamed all the total spending, total claims, and total dosage unit column numbers so there was only 1 underscore before the date. This will be important for separating out the dates in the future. \n\n\n\nCITE THE SOURCE YOOOOOOOOOOOOO\n\nLUBRIDATE UR YEAR$\n\nDESCRIBE THE VARIABLE TYPES YO\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Read In the Data\nMedicaid_Drug_Data <- read_csv(\"/Users/Emma/Desktop/Koding is Kewl/Medicaid_Spending_by_Drug_2020.csv\") %>%\n   select(!contains(\"Avg\")) %>%\n   select(!contains(\"Flag\")) %>%\n  rename(\"Mftrs_Count\" = \"Tot_Mftr\", \"TotSpndng_2016\" = \"Tot_Spndng_2016\", \"TotDsgUnts_2016\" = \"Tot_Dsg_Unts_2016\", \"TotClms_2016\" = \"Tot_Clms_2016\", \"TotSpndng_2017\" = \"Tot_Spndng_2017\", \"TotDsgUnts_2017\" = \"Tot_Dsg_Unts_2017\", \"TotClms_2017\" = \"Tot_Clms_2017\", \"TotSpndng_2018\" = \"Tot_Spndng_2018\", \"TotDsgUnts_2018\" = \"Tot_Dsg_Unts_2018\", \"TotClms_2018\" = \"Tot_Clms_2018\", \"TotSpndng_2019\" = \"Tot_Spndng_2019\", \"TotDsgUnts_2019\" = \"Tot_Dsg_Unts_2019\", \"TotClms_2019\" = \"Tot_Clms_2019\", \"TotSpndng_2020\" = \"Tot_Spndng_2020\", \"TotDsgUnts_2020\" = \"Tot_Dsg_Unts_2020\", \"TotClms_2020\" = \"Tot_Clms_2020\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 15972 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): Brnd_Name, Gnrc_Name, Mftr_Name\ndbl (33): Tot_Mftr, Tot_Spndng_2016, Tot_Dsg_Unts_2016, Tot_Clms_2016, Avg_S...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n  Medicaid_Drug_Data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15,972 × 19\n   Brnd_Name     Gnrc_…¹ Mftrs…² Mftr_…³ TotSp…⁴ TotDs…⁵ TotCl…⁶ TotSp…⁷ TotDs…⁸\n   <chr>         <chr>     <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 8hr Arthriti… Acetam…       1 Overall     NA      NA       NA     NA      NA \n 2 8hr Arthriti… Acetam…       1 Topco       NA      NA       NA     NA      NA \n 3 A & D         Vitami…       1 Overall    471.   7992.      49     NA      NA \n 4 A & D         Vitami…       1 Scheri…    471.   7992.      49     NA      NA \n 5 A And D       Vits A…       1 Overall     NA      NA       NA    406.   3502.\n 6 A And D       Vits A…       1 Bayer …     NA      NA       NA    406.   3502.\n 7 A And D Diap… Dimeth…       1 Overall     NA      NA       NA     NA      NA \n 8 A And D Diap… Dimeth…       1 Bayer …     NA      NA       NA     NA      NA \n 9 A-Hydrocort   Hydroc…       1 Overall     NA      NA       NA  19004.    122 \n10 A-Hydrocort   Hydroc…       1 Hospir…     NA      NA       NA  19004.    122 \n# … with 15,962 more rows, 10 more variables: TotClms_2017 <dbl>,\n#   TotSpndng_2018 <dbl>, TotDsgUnts_2018 <dbl>, TotClms_2018 <dbl>,\n#   TotSpndng_2019 <dbl>, TotDsgUnts_2019 <dbl>, TotClms_2019 <dbl>,\n#   TotSpndng_2020 <dbl>, TotDsgUnts_2020 <dbl>, TotClms_2020 <dbl>, and\n#   abbreviated variable names ¹​Gnrc_Name, ²​Mftrs_Count, ³​Mftr_Name,\n#   ⁴​TotSpndng_2016, ⁵​TotDsgUnts_2016, ⁶​TotClms_2016, ⁷​TotSpndng_2017,\n#   ⁸​TotDsgUnts_2017\n```\n:::\n:::\n\n\n\n## Clean the Dataset\n\nWhile the majority of the columns are totals, they represent annual total spending, dosage units, and claims for a specific drug manufactured by a specific manufacturer. Currently, for each drug, is a row for each manufacturer of a drug, and then an \"Overall\" row that provide per drug annual total spending, dosage units, and claims by combining the data from every manufacturer of the drug. In the  \"Mftrs_count\" column, the total number of manufacturers for any given drug is only contained in the \"Overall row\", with a 1 being entered in every row under the manufacturer name column.\n\nOutside of the total number of manufacturers contained in the \"Overall\" row, these rows can be recreated from the rest of the data. Before removing it, I created a new column called \"Number_Mftrs\" that entered the manufacturer count whenever the manufacturer column contained \"Overall\". I then filled the number of manufacturers, so for every drug you can see the total number of manufacturers. I then removed the original Mftrs_Count column using select() and the Overall rows using filter().\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Separate the Overall from Mftr to Its Own Column of Total Number of Manufacturers \nMedicaid_Data <- Medicaid_Drug_Data%>%\n  mutate(Number_Mftrs = case_when(\n    str_detect(Mftr_Name, \"Overall\") ~ Mftrs_Count)) %>%\n    relocate(`Number_Mftrs`, .before= Mftrs_Count)\n  \n#Fill down total_mftrs\nMedicaid_Data <- Medicaid_Data %>%\n  fill(Number_Mftrs)\n  \n#Remove the Mftrs_Count Columns\nMedicaid_Data <- Medicaid_Data %>%\n  select(!ends_with(\"Count\"))\n\n\n#Remove the overall rows \nMedicaid_Data <- filter(Medicaid_Data, !str_detect(`Mftr_Name`,\"Overall\"))\n\nMedicaid_Data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11,577 × 19\n   Brnd_Name     Gnrc_…¹ Numbe…² Mftr_…³ TotSp…⁴ TotDs…⁵ TotCl…⁶ TotSp…⁷ TotDs…⁸\n   <chr>         <chr>     <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 8hr Arthriti… Acetam…       1 Topco   NA          NA       NA NA          NA \n 2 A & D         Vitami…       1 Scheri…  4.71e2   7992.      49 NA          NA \n 3 A And D       Vits A…       1 Bayer … NA          NA       NA  4.06e2   3502.\n 4 A And D Diap… Dimeth…       1 Bayer … NA          NA       NA NA          NA \n 5 A-Hydrocort   Hydroc…       1 Hospir… NA          NA       NA  1.90e4    122 \n 6 A-Methapred   Methyl…       1 Hospira  3.45e4   2426.    1189  5.23e4    903.\n 7 Abacavir      Abacav…       7 Camber…  2.28e6 504740     8520  1.39e6 516468 \n 8 Abacavir      Abacav…       7 Cipla … NA          NA       NA NA          NA \n 9 Abacavir      Abacav…       7 Aurobi…  2.89e6 636555    10946  1.91e6 512125 \n10 Abacavir      Abacav…       7 Major … NA          NA       NA  7.23e3   1384 \n# … with 11,567 more rows, 10 more variables: TotClms_2017 <dbl>,\n#   TotSpndng_2018 <dbl>, TotDsgUnts_2018 <dbl>, TotClms_2018 <dbl>,\n#   TotSpndng_2019 <dbl>, TotDsgUnts_2019 <dbl>, TotClms_2019 <dbl>,\n#   TotSpndng_2020 <dbl>, TotDsgUnts_2020 <dbl>, TotClms_2020 <dbl>, and\n#   abbreviated variable names ¹​Gnrc_Name, ²​Number_Mftrs, ³​Mftr_Name,\n#   ⁴​TotSpndng_2016, ⁵​TotDsgUnts_2016, ⁶​TotClms_2016, ⁷​TotSpndng_2017,\n#   ⁸​TotDsgUnts_2017\n```\n:::\n:::\n\n\nThe next step in cleaning and preparing the data was separating out the year in the column headers from the measurement. To compare the change in values over time graphically, I need to create a column containing year. To accomplish this, I pivoted longer and combined the 15 columns containing total spending, total dosage units, and total claims for the years 2016 - 2020 under a column named \"Measurement_year\" and the values under Value. I then separated out the year from the measurements to created a column of years.\n\nThis new \"Year\" column is categorical, but dates are ordinal variables. Using as.factor() to convert the years to a factor, and then recoded the years to an ordinal variable using recode_factor().\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Pivot longer to consolidate, Year, Values, and Manufacturing \nMedicaid_Data_Longer<- Medicaid_Data %>%\n  pivot_longer(cols = contains(\"Tot\"),\n               names_to = \"Measurement_Year\",\n               values_to = \"Value\")\n\n#Separate out year\nMedicaid_Data_tidy <- Medicaid_Data_Longer %>%\n  separate(\"Measurement_Year\", c(\"Measurement\", \"Year\"), sep = \"_\")\n\n#Convert Year from categorical to factor to ordinal\nMedicaid_Data_tidy <- Medicaid_Data_tidy %>%\n  mutate(\"Year\" = as.factor(Year)) %>%\n  mutate(\"Year\" = recode_factor(Year,\n                                \"2016\" = \"2016\",\n                                \"2017\" = \"2017\",\n                                \"2018\" = \"2018\",\n                                \"2019\" = \"2019\",\n                                \"2020\" = \"2020\",\n                                .ordered = TRUE))\n\nMedicaid_Data_tidy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 173,655 × 7\n   Brnd_Name          Gnrc_Name     Number_Mftrs Mftr_Name Measure…¹ Year  Value\n   <chr>              <chr>                <dbl> <chr>     <chr>     <ord> <dbl>\n 1 8hr Arthritis Pain Acetaminophen            1 Topco     TotSpndng 2016    NA \n 2 8hr Arthritis Pain Acetaminophen            1 Topco     TotDsgUn… 2016    NA \n 3 8hr Arthritis Pain Acetaminophen            1 Topco     TotClms   2016    NA \n 4 8hr Arthritis Pain Acetaminophen            1 Topco     TotSpndng 2017    NA \n 5 8hr Arthritis Pain Acetaminophen            1 Topco     TotDsgUn… 2017    NA \n 6 8hr Arthritis Pain Acetaminophen            1 Topco     TotClms   2017    NA \n 7 8hr Arthritis Pain Acetaminophen            1 Topco     TotSpndng 2018    NA \n 8 8hr Arthritis Pain Acetaminophen            1 Topco     TotDsgUn… 2018    NA \n 9 8hr Arthritis Pain Acetaminophen            1 Topco     TotClms   2018    NA \n10 8hr Arthritis Pain Acetaminophen            1 Topco     TotSpndng 2019   915.\n# … with 173,645 more rows, and abbreviated variable name ¹​Measurement\n```\n:::\n:::\n\n\n\n\nHaving total spending, claims, and dosage units all in one Measurement column limits future analysis and graphing. By pivoting wider, each measurement has its own column.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Pivot wider \nMedicaid_Drug_DF <- pivot_wider(Medicaid_Data_tidy, names_from = \"Measurement\", values_from = \"Value\")\n\nMedicaid_Drug_DF\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 57,885 × 8\n   Brnd_Name          Gnrc_Name    Numbe…¹ Mftr_…² Year  TotSp…³ TotDs…⁴ TotClms\n   <chr>              <chr>          <dbl> <chr>   <ord>   <dbl>   <dbl>   <dbl>\n 1 8hr Arthritis Pain Acetaminoph…       1 Topco   2016      NA      NA       NA\n 2 8hr Arthritis Pain Acetaminoph…       1 Topco   2017      NA      NA       NA\n 3 8hr Arthritis Pain Acetaminoph…       1 Topco   2018      NA      NA       NA\n 4 8hr Arthritis Pain Acetaminoph…       1 Topco   2019     915.  14720      181\n 5 8hr Arthritis Pain Acetaminoph…       1 Topco   2020     434.   4600       49\n 6 A & D              Vitamins A …       1 Scheri… 2016     471.   7992.      49\n 7 A & D              Vitamins A …       1 Scheri… 2017      NA      NA       NA\n 8 A & D              Vitamins A …       1 Scheri… 2018     252.  36845       84\n 9 A & D              Vitamins A …       1 Scheri… 2019     770.  51334.     121\n10 A & D              Vitamins A …       1 Scheri… 2020     323.  15752.      41\n# … with 57,875 more rows, and abbreviated variable names ¹​Number_Mftrs,\n#   ²​Mftr_Name, ³​TotSpndng, ⁴​TotDsgUnts\n```\n:::\n:::\n\n\n## Data Narrative\n\nThe Medicaid by Drug data set was created from the Center's for Medicare and Medicaid Services (CMS) administrative data enrolled in Medicaid. It contains information on spending for outpatient pharmaceutical drugs covered by Medicaid that comes from state and federal Medicaid reimbursements. The data set was created to track the average spending of pharmaceutical drugs, in the form of total per drug spending per year, spending per drug dosage unit, spending per drug claim, and changes in drug spending over time.\n\nThe data spans the from 2016 to 2020. After reading in, cleaning, and transforming the data it has 57,885 rows and 8 columns.\n\nThe variable names and types are:\n\n- Brnd_Name is the Brand Name of each drug. This is the name given to a pharmaceutical drug by the manufacturer. This variable is a character.\n\n- Gnrc_Name is the Generic name of each drug. This is the the name of a pharmaceutical drug  containing the same active ingredients as the Brand Name drug, and created a time after the patent expires. This variable is a character.\n\n- Number_Mftrs is the number of total number of manufacturers that produce each drug. This variable is numeric, specifically of the integer class.\n\n- Mftr_Name is the name of each manufacturer that produces each drug. This variable is a character.\n\n- Year is the year each measurement such as spending, claim, and dosage was taken. This variable is ordinal.\n\n- TotSpnding is the combined Medicaid spending for each drug in the given year. This is a numeric variable, of the double class.\n\n- TotDsgUnits is the sum of all dosage units of a particular drug. Units very and can be in grams or milliliters, wuth a single unit being the lowest amount of a drug that can be given. This is a numeric variable, of the double class.\n\n- TotClaims is the total number of prescriptions filled for each drug, including refills of a drug. This is a numeric variable, of the double class.\n\n## Research Questions\n\nPotential research questions that this data set can answer are\n\n- How has total spending on drugs changed over time?\n\n- Is there a relationship between the number of manufacturers of a drug and total spending of a drug in a year?\n\n## Citation\n\nCenters for Medicare and Medicaid Services. *Medicaid Spending By Drug*. (Data file and code book). Data.CMS.gov, 2022. Baltimore, MD. Web. 18 Oct 2022. https://data.cms.gov/summary-statistics-on-use-and-payments/medicare-medicaid-spending-by-drug/medicaid-spending-by-drug\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}