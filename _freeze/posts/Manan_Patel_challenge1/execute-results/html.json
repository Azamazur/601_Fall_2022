{
  "hash": "a2bc84e20615292757ee81f788271eed",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1 Instructions\"\nauthor: \"Meredith Rolfe\"\ndesription: \"Reading in data and creating a post\"\ndate: \"08/15/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n  - railroads\n  - faostat\n  - wildbirds\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a dataset, and\n\n2)  describe the dataset using both words and any supporting information (e.g., tables, etc)\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   railroad_2012_clean_county.csv ⭐\n-   birds.csv ⭐⭐\n-   FAOstat\\*.csv ⭐⭐\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐⭐\n\nFind the `_data` folder, located inside the `posts` folder. Then you can read in the data, using either one of the `readr` standard tidy read commands, or a specialized package such as `readxl`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nrailroad<-read_csv(\"_data/railroad_2012_clean_county.csv\")\nrailroad\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,930 × 3\n   state county               total_employees\n   <chr> <chr>                          <dbl>\n 1 AE    APO                                2\n 2 AK    ANCHORAGE                          7\n 3 AK    FAIRBANKS NORTH STAR               2\n 4 AK    JUNEAU                             3\n 5 AK    MATANUSKA-SUSITNA                  2\n 6 AK    SITKA                              1\n 7 AK    SKAGWAY MUNICIPALITY              88\n 8 AL    AUTAUGA                          102\n 9 AL    BALDWIN                          143\n10 AL    BARBOUR                            1\n# … with 2,920 more rows\n```\n:::\n:::\n\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#| label: summary\n#| \n```\n:::\n\n\n# Railroad Dataset(railroad_2012_clean_county.csv)-\n\nThere are total three variables- state, county, and total employees. We will write R commands to see how many states, county and total employees unique employees are there and we will observe the dataset accordingly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(county)%>%\n  n_distinct(.)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1709\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(county)%>%\n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,709 × 1\n   county              \n   <chr>               \n 1 APO                 \n 2 ANCHORAGE           \n 3 FAIRBANKS NORTH STAR\n 4 JUNEAU              \n 5 MATANUSKA-SUSITNA   \n 6 SITKA               \n 7 SKAGWAY MUNICIPALITY\n 8 AUTAUGA             \n 9 BALDWIN             \n10 BARBOUR             \n# … with 1,699 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(state)%>%\n  n_distinct(.)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 53\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(state)%>%\n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 53 × 1\n   state\n   <chr>\n 1 AE   \n 2 AK   \n 3 AL   \n 4 AP   \n 5 AR   \n 6 AZ   \n 7 CA   \n 8 CO   \n 9 CT   \n10 DC   \n# … with 43 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(total_employees)%>%\n  n_distinct(.)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 404\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(total_employees)%>%\n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 404 × 1\n   total_employees\n             <dbl>\n 1               2\n 2               7\n 3               3\n 4               1\n 5              88\n 6             102\n 7             143\n 8              25\n 9             154\n10              13\n# … with 394 more rows\n```\n:::\n:::\n\n\n# Birds Dataset(FAOstat\\*.csv)-\n\nThere are total three variables- state, county, and total employees. We will write R commands to see how many states, county and total employees unique employees are there and we will observe the birds dataset accordingly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nbirds<-read_csv(\"_data/birds.csv\")\nbirds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30,977 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1961  1961\n 2 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1962  1962\n 3 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1963  1963\n 4 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1964  1964\n 5 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1965  1965\n 6 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1966  1966\n 7 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1967  1967\n 8 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1968  1968\n 9 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1969  1969\n10 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1970  1970\n# … with 30,967 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchickens<-read_csv(\"_data/FAOSTAT_egg_chicken.csv\")\nchickens\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 38,170 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5313 Laying     1062 Eggs…    1961  1961\n 2 QL           Lives…       2 Afgh…    5410 Yield      1062 Eggs…    1961  1961\n 3 QL           Lives…       2 Afgh…    5510 Produc…    1062 Eggs…    1961  1961\n 4 QL           Lives…       2 Afgh…    5313 Laying     1062 Eggs…    1962  1962\n 5 QL           Lives…       2 Afgh…    5410 Yield      1062 Eggs…    1962  1962\n 6 QL           Lives…       2 Afgh…    5510 Produc…    1062 Eggs…    1962  1962\n 7 QL           Lives…       2 Afgh…    5313 Laying     1062 Eggs…    1963  1963\n 8 QL           Lives…       2 Afgh…    5410 Yield      1062 Eggs…    1963  1963\n 9 QL           Lives…       2 Afgh…    5510 Produc…    1062 Eggs…    1963  1963\n10 QL           Lives…       2 Afgh…    5313 Laying     1062 Eggs…    1964  1964\n# … with 38,160 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbirds.sm<-birds%>%\n  select(-contains(\"Code\"))\nbirds.sm\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30,977 × 9\n   Domain       Area        Element Item      Year Unit      Value Flag  Flag …¹\n   <chr>        <chr>       <chr>   <chr>    <dbl> <chr>     <dbl> <chr> <chr>  \n 1 Live Animals Afghanistan Stocks  Chickens  1961 1000 Head  4700 F     FAO es…\n 2 Live Animals Afghanistan Stocks  Chickens  1962 1000 Head  4900 F     FAO es…\n 3 Live Animals Afghanistan Stocks  Chickens  1963 1000 Head  5000 F     FAO es…\n 4 Live Animals Afghanistan Stocks  Chickens  1964 1000 Head  5300 F     FAO es…\n 5 Live Animals Afghanistan Stocks  Chickens  1965 1000 Head  5500 F     FAO es…\n 6 Live Animals Afghanistan Stocks  Chickens  1966 1000 Head  5800 F     FAO es…\n 7 Live Animals Afghanistan Stocks  Chickens  1967 1000 Head  6600 F     FAO es…\n 8 Live Animals Afghanistan Stocks  Chickens  1968 1000 Head  6290 <NA>  Offici…\n 9 Live Animals Afghanistan Stocks  Chickens  1969 1000 Head  6300 F     FAO es…\n10 Live Animals Afghanistan Stocks  Chickens  1970 1000 Head  6000 F     FAO es…\n# … with 30,967 more rows, and abbreviated variable name ¹​`Flag Description`\n```\n:::\n:::\n\n\n# Wild Birds Dataset(wild_bird_data.csv)-\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwildbirds<-read_excel(\"_data/wild_bird_data.xlsx\")\nwildbirds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 147 × 2\n   Reference           `Taken from Figure 1 of Nee et al.`\n   <chr>               <chr>                              \n 1 Wet body weight [g] Population size                    \n 2 5.45887180052624    532194.395145161                   \n 3 7.76456810683605    3165107.44544653                   \n 4 8.63858738018464    2592996.86778979                   \n 5 10.6897349302105    3524193.2266336                    \n 6 7.41722577905587    389806.168891807                   \n 7 9.1169347252776     604765.97978904                    \n 8 8.03684333000353    192360.511579436                   \n 9 8.70473119796067    250452.449623033                   \n10 8.89032317828959    16997.4156415239                   \n# … with 137 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwildbirds <- read_excel(\"_data/wild_bird_data.xlsx\", skip = 1)\nwildbirds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 146 × 2\n   `Wet body weight [g]` `Population size`\n                   <dbl>             <dbl>\n 1                  5.46           532194.\n 2                  7.76          3165107.\n 3                  8.64          2592997.\n 4                 10.7           3524193.\n 5                  7.42           389806.\n 6                  9.12           604766.\n 7                  8.04           192361.\n 8                  8.70           250452.\n 9                  8.89            16997.\n10                  9.52              595.\n# … with 136 more rows\n```\n:::\n:::\n\n\nHere we can see wet body weight and population size, now we will clean up the dataset little bit.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwildbirds <- read_excel(\"_data/wild_bird_data.xlsx\", skip = 2, col_names = c(\"weight\", \"pop_size\"))\nwildbirds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 146 × 2\n   weight pop_size\n    <dbl>    <dbl>\n 1   5.46  532194.\n 2   7.76 3165107.\n 3   8.64 2592997.\n 4  10.7  3524193.\n 5   7.42  389806.\n 6   9.12  604766.\n 7   8.04  192361.\n 8   8.70  250452.\n 9   8.89   16997.\n10   9.52     595.\n# … with 136 more rows\n```\n:::\n:::\n\n\n# Railroad Dataset(wild_bird_data.csv)-\n\nThere are total three variables- state, county, and employees. We will write R commands to see how many states, county and employees unique employees are there and we will observe the wild_bird_data dataset accordingly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_excel(\"_data/StateCounty2012.xls\",skip = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,990 × 5\n   STATE     ...2  COUNTY               ...4  TOTAL\n   <chr>     <lgl> <chr>                <lgl> <dbl>\n 1 AE        NA    APO                  NA        2\n 2 AE Total1 NA    <NA>                 NA        2\n 3 AK        NA    ANCHORAGE            NA        7\n 4 AK        NA    FAIRBANKS NORTH STAR NA        2\n 5 AK        NA    JUNEAU               NA        3\n 6 AK        NA    MATANUSKA-SUSITNA    NA        2\n 7 AK        NA    SITKA                NA        1\n 8 AK        NA    SKAGWAY MUNICIPALITY NA       88\n 9 AK Total  NA    <NA>                 NA      103\n10 AL        NA    AUTAUGA              NA      102\n# … with 2,980 more rows\n```\n:::\n:::\n\n\nLet's delete the unwanted columns and make it clean and select the on which we need in the use. Then we will filter out the total rows and remove any notes if necessary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_excel(\"_data/StateCounty2012.xls\",skip = 4,col_names= c(\"State\", \"delete\", \"County\", \"delete\", \"Employees\"))%>%\n  select(!contains(\"delete\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,990 × 3\n   State     County               Employees\n   <chr>     <chr>                    <dbl>\n 1 AE        APO                          2\n 2 AE Total1 <NA>                         2\n 3 AK        ANCHORAGE                    7\n 4 AK        FAIRBANKS NORTH STAR         2\n 5 AK        JUNEAU                       3\n 6 AK        MATANUSKA-SUSITNA            2\n 7 AK        SITKA                        1\n 8 AK        SKAGWAY MUNICIPALITY        88\n 9 AK Total  <NA>                       103\n10 AL        AUTAUGA                    102\n# … with 2,980 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad<-read_excel(\"_data/StateCounty2012.xls\", skip = 4,col_names= c(\"State\", \"delete\", \"County\", \"delete\", \"Employees\"))%>%\n  select(!contains(\"delete\"))%>%\n  filter(!str_detect(State, \"Total\"))\nrailroad\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,933 × 3\n   State County               Employees\n   <chr> <chr>                    <dbl>\n 1 AE    APO                          2\n 2 AK    ANCHORAGE                    7\n 3 AK    FAIRBANKS NORTH STAR         2\n 4 AK    JUNEAU                       3\n 5 AK    MATANUSKA-SUSITNA            2\n 6 AK    SITKA                        1\n 7 AK    SKAGWAY MUNICIPALITY        88\n 8 AL    AUTAUGA                    102\n 9 AL    BALDWIN                    143\n10 AL    BARBOUR                      1\n# … with 2,923 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad <-head(railroad, -2)\ntail(railroad, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   State  County     Employees\n   <chr>  <chr>          <dbl>\n 1 WY     NIOBRARA          51\n 2 WY     PARK              29\n 3 WY     PLATTE           129\n 4 WY     SHERIDAN         252\n 5 WY     SUBLETTE           3\n 6 WY     SWEETWATER       196\n 7 WY     UINTA             49\n 8 WY     WASHAKIE          10\n 9 WY     WESTON            37\n10 CANADA <NA>             662\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(State)%>%\n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 54 × 1\n   State\n   <chr>\n 1 AE   \n 2 AK   \n 3 AL   \n 4 AP   \n 5 AR   \n 6 AZ   \n 7 CA   \n 8 CO   \n 9 CT   \n10 DC   \n# … with 44 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(State)%>%\n  n_distinct(.)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 54\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(County)%>%\n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,710 × 1\n   County              \n   <chr>               \n 1 APO                 \n 2 ANCHORAGE           \n 3 FAIRBANKS NORTH STAR\n 4 JUNEAU              \n 5 MATANUSKA-SUSITNA   \n 6 SITKA               \n 7 SKAGWAY MUNICIPALITY\n 8 AUTAUGA             \n 9 BALDWIN             \n10 BARBOUR             \n# … with 1,700 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(County)%>%\n  n_distinct(.)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1710\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(Employees)%>%\n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 405 × 1\n   Employees\n       <dbl>\n 1         2\n 2         7\n 3         3\n 4         1\n 5        88\n 6       102\n 7       143\n 8        25\n 9       154\n10        13\n# … with 395 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad%>%\n  select(Employees)%>%\n  n_distinct(.)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 405\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}