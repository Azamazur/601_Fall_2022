{
  "hash": "f1b25df35964cc0013e0d53132fcd277",
  "result": {
    "markdown": "---\ntitle: \"HW2\"\nauthor: \"Lai Wei\"\ndescription: \"Introduction to Visualization\"\ndate: \"11/15/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - hw2\n---\n\n\n- Goals of this HW: \n  gain experience with working with external data, dplyr, and the pipe operator.\n\nBackground for  mmr_2015.csv: \nThe maternal mortality ratio (MMR) is defined as the number of maternal deaths per 100,000 live births. The UN maternal mortality estimation group produces estimates of the MMR for all countries in the world.\n\nIn this HW, I will use mmr_2015.csv, which is a data set that contains a subset of the (real) data that were used to generate the United Nations Maternal mortality estimates, as published in the year 2015. Variables in the data set mmr_2015.csv are as follows:\n\n-\tIso = ISO code\n-\tName = country name\n-\tYear = observation year\n-\tMMR = observed maternal mortality ratio, which is defined as the number of maternal deaths/total number of births*100,000\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(babynames)\nlibrary(dplyr)\n```\n:::\n\n\n1. using mmr_2015.csv: Read in mmr_2015.csv. Then construct a graph that shows the observed values of the MMR plotted against year (starting in 2000) for India and Thailand, as in the example Figure 1 below. Use the pipe operator so that the graph follows from a multi-line command that starts with “mmr %>%”. Hint 1: Use data transformation functions to filter rows with i. year >= 2000 and ii. countries India and Thailand only. Hint 2: Use ggplot() to display the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmmr <- read.csv(\"D:/Umass Amherst/BIOSTATS 597D/HW/mmr_2015.csv\")\ndata_IT = filter(mmr,country == \"India\"|country == \"Thailand\",year >= 2000)\nggplot(data = data_IT,aes(x = year,y= mmr))+\n  geom_point(aes(group = country,color = country))\n```\n\n::: {.cell-output-display}\n![](HW2_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n2. using babynames as used in the lecture slides: \n\nReproduce the example Figure 2 below where babynames was filtered to include only those rows with year > 1975, sex equal to male, and either prop > 0.025 or n > 50000. Note that the y-axis starts at zero.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames %>% \n  filter(year > 1975, sex == \"M\",prop > 0.025|n > 50000) %>% \n  ggplot(aes(x = year, y = prop))+\n  geom_point(aes(group = name,color = name), size = 2)+\n  geom_line(aes(group = name, color = name))+\n  expand_limits(y = 0)\n```\n\n::: {.cell-output-display}\n![](HW2_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n3. Construct and print a tibble that shows the countries sorted by their average observed MMR (rounded to zero digits), with the country with the highest average MMR listed first, as example Figure 3 below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1<- group_by(mmr,country) %>% \n  summarise_at(vars(mmr),list(name = mean))\n  names(data1)[2] = \"ave\" \n  data1$ave <- round(data1$ave,0)\n  arrange(data1,desc(ave))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 2\n   country       ave\n   <chr>       <dbl>\n 1 South Sudan  2037\n 2 Afghanistan  1900\n 3 Cameroon      652\n 4 Sudan         427\n 5 Myanmar       316\n 6 India         313\n 7 Bangladesh    258\n 8 Nepal         229\n 9 Paraguay      178\n10 Botswana      172\n# … with 20 more rows\n```\n:::\n:::\n\n\n4. Continuing with the mmr data set\n\nPart a: For each year\n- first calculate the mean observed value for each country (to allow for settings where countries may have more than 1 value per year; note that this is not true in this data set). \n- then rank countries by increasing MMR for each year. \n\nCalculate the mean ranking across all years, extract the mean ranking for 10 countries with the lowest ranking across all years, and print the resulting table. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2<-\n  mmr %>% \n  group_by(year) %>% \n  mutate(Mean = mean(mmr,na.rm = TRUE)) %>% \n  arrange(desc(mmr))\ndata2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 175 × 5\n# Groups:   year [25]\n   iso   country      year   mmr  Mean\n   <chr> <chr>       <int> <dbl> <dbl>\n 1 SSD   South Sudan  2005 2037  275. \n 2 AFG   Afghanistan  2000 1900  301. \n 3 CMR   Cameroon     2010  652  130. \n 4 SDN   Sudan        2005  638  275. \n 5 IND   India        1999  540  149. \n 6 IND   India        1992  437  208. \n 7 IND   India        1998  398  126. \n 8 IND   India        2000  327  301. \n 9 BGD   Bangladesh   2000  322. 301. \n10 MMR   Myanmar      2004  316.  85.7\n# … with 165 more rows\n```\n:::\n\n```{.r .cell-code}\n  arrange(data2,desc(Mean)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 175 × 5\n# Groups:   year [25]\n   iso   country               year    mmr  Mean\n   <chr> <chr>                <int>  <dbl> <dbl>\n 1 AFG   Afghanistan           2000 1900    301.\n 2 IND   India                 2000  327    301.\n 3 BGD   Bangladesh            2000  322.   301.\n 4 MNG   Mongolia              2000  166.   301.\n 5 JAM   Jamaica               2000   90.3  301.\n 6 EGY   Egypt                 2000   84    301.\n 7 LKA   Sri Lanka             2000   55.6  301.\n 8 CHN   China                 2000   53    301.\n 9 OMN   Oman                  2000   16.1  301.\n10 ARE   United Arab Emirates  2000    0    301.\n# … with 165 more rows\n```\n:::\n\n```{.r .cell-code}\nlowest10 <- print(tail(data2,10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n# Groups:   year [9]\n   iso   country               year   mmr  Mean\n   <chr> <chr>                <int> <dbl> <dbl>\n 1 TUR   Turkey                2011  15.5  77.7\n 2 OMN   Oman                  2005  15.4 275. \n 3 TUR   Turkey                2012  15.4  73.0\n 4 TUR   Turkey                2014  15.2  22.7\n 5 OMN   Oman                  1999  13.7 149. \n 6 OMN   Oman                  1997  13.3  57.2\n 7 OMN   Oman                  1993   6   111. \n 8 ARE   United Arab Emirates  2008   1.4  82.6\n 9 ARE   United Arab Emirates  2005   0   275. \n10 ARE   United Arab Emirates  2000   0   301. \n```\n:::\n:::\n\n\nPart b: do the same thing but now with rankings calculated separately for two periods, with period 1 referring to years < 2000 and period 2 referring to years >= 2000. \nFor each period\n\n- first calculate the mean observed value for each country (to allow for settings where countries may have more than 1 value per period)\n- then rank countries by increasing MMR for each period. \n\nCalculate the mean ranking across all periods, extract the 10 countries with the lowest ranking across all periods, and print the table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbefore_2000<-mmr %>% \n  filter(year < 2000) %>% \n  group_by(country) %>% \n  mutate(Mean = mean(mmr,na.rm = TRUE)) %>% \n  arrange(desc(mmr))\nbefore_2000\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 41 × 5\n# Groups:   country [12]\n   iso   country   year   mmr  Mean\n   <chr> <chr>    <int> <dbl> <dbl>\n 1 IND   India     1999  540   458.\n 2 IND   India     1992  437   458.\n 3 IND   India     1998  398   458.\n 4 MNG   Mongolia  1993  259   191.\n 5 MNG   Mongolia  1994  219   191.\n 6 MNG   Mongolia  1992  204.  191.\n 7 MNG   Mongolia  1995  186   191.\n 8 MNG   Mongolia  1999  182   191.\n 9 EGY   Egypt     1992  174   174 \n10 MNG   Mongolia  1996  174.  191.\n# … with 31 more rows\n```\n:::\n\n```{.r .cell-code}\n  print(tail(before_2000,10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n# Groups:   country [3]\n   iso   country               year   mmr  Mean\n   <chr> <chr>                <int> <dbl> <dbl>\n 1 OMN   Oman                  1994  24.4  18.0\n 2 SAU   Saudi Arabia          1997  23    23  \n 3 ARE   United Arab Emirates  1995  22.4  27.5\n 4 OMN   Oman                  1995  22    18.0\n 5 OMN   Oman                  1996  21    18.0\n 6 OMN   Oman                  1998  18.5  18.0\n 7 OMN   Oman                  1992  15.9  18.0\n 8 OMN   Oman                  1999  13.7  18.0\n 9 OMN   Oman                  1997  13.3  18.0\n10 OMN   Oman                  1993   6    18.0\n```\n:::\n\n```{.r .cell-code}\nafter_2000 <- mmr %>% \n  filter(year >= 2000) %>% \n  group_by(country) %>% \n  mutate(Mean = mean(mmr,na.rm = TRUE)) %>% \n  arrange(desc(mmr))\nafter_2000\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 134 × 5\n# Groups:   country [28]\n   iso   country      year   mmr  Mean\n   <chr> <chr>       <int> <dbl> <dbl>\n 1 SSD   South Sudan  2005 2037  2037 \n 2 AFG   Afghanistan  2000 1900  1900 \n 3 CMR   Cameroon     2010  652   652 \n 4 SDN   Sudan        2005  638   427.\n 5 IND   India        2000  327   240.\n 6 BGD   Bangladesh   2000  322.  258.\n 7 MMR   Myanmar      2004  316.  316.\n 8 IND   India        2002  301   240.\n 9 IND   India        2005  254   240.\n10 NPL   Nepal        2008  229   229 \n# … with 124 more rows\n```\n:::\n\n```{.r .cell-code}\n  print(tail(after_2000,10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n# Groups:   country [3]\n   iso   country               year   mmr   Mean\n   <chr> <chr>                <int> <dbl>  <dbl>\n 1 TUR   Turkey                2010  16.4 17.2  \n 2 OMN   Oman                  2000  16.1 22.3  \n 3 TUR   Turkey                2013  15.9 17.2  \n 4 TUR   Turkey                2011  15.5 17.2  \n 5 OMN   Oman                  2005  15.4 22.3  \n 6 TUR   Turkey                2012  15.4 17.2  \n 7 TUR   Turkey                2014  15.2 17.2  \n 8 ARE   United Arab Emirates  2008   1.4  0.467\n 9 ARE   United Arab Emirates  2005   0    0.467\n10 ARE   United Arab Emirates  2000   0    0.467\n```\n:::\n:::\n",
    "supporting": [
      "HW2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}