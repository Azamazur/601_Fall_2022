{
  "hash": "034f5cedb867ada4d17ff6c34a0b32bf",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"Shriya\"\ndesription: \"More data wrangling: pivoting\"\ndate: \"11/27/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - abc_poll\n  - eggs\n  - fed_rates\n  - hotel_bookings\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   abc_poll.csv ⭐\n-   poultry_tidy.xlsx or organiceggpoultry.xls⭐⭐\n-   FedFundsRate.csv⭐⭐⭐\n-   hotel_bookings.csv⭐⭐⭐⭐\n-   debt_in_trillions.xlsx ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset <- read_csv(\"_data/hotel_bookings.csv\", show_col_types = FALSE)\ndataset\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 x 32\n   hotel        is_canceled lead_time arrival_date_year arrival_date_month\n   <chr>              <dbl>     <dbl>             <dbl> <chr>             \n 1 Resort Hotel           0       342              2015 July              \n 2 Resort Hotel           0       737              2015 July              \n 3 Resort Hotel           0         7              2015 July              \n 4 Resort Hotel           0        13              2015 July              \n 5 Resort Hotel           0        14              2015 July              \n 6 Resort Hotel           0        14              2015 July              \n 7 Resort Hotel           0         0              2015 July              \n 8 Resort Hotel           0         9              2015 July              \n 9 Resort Hotel           1        85              2015 July              \n10 Resort Hotel           1        75              2015 July              \n# ... with 119,380 more rows, and 27 more variables:\n#   arrival_date_week_number <dbl>, arrival_date_day_of_month <dbl>,\n#   stays_in_weekend_nights <dbl>, stays_in_week_nights <dbl>, adults <dbl>,\n#   children <dbl>, babies <dbl>, meal <chr>, country <chr>,\n#   market_segment <chr>, distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, ...\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe above dataset consists data from primarily 2 different hotels 'City Hotel' and 'Resort Hotel' and has 119390 rows and 31 columns. Each row contains the information about the customer booking like customer type reservation status, number of adults/children/babies in the room, arrival date, stay days. \n\n## Tidy Data (as needed)\n\nThe data can be tidied up in the following way\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(dataset$country)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  ABW   AGO   AIA   ALB   AND   ARE   ARG   ARM   ASM   ATA   ATF   AUS   AUT \n    2   362     1    12     7    51   214     8     1     2     1   426  1263 \n  AZE   BDI   BEL   BEN   BFA   BGD   BGR   BHR   BHS   BIH   BLR   BOL   BRA \n   17     1  2342     3     1    12    75     5     1    13    26    10  2224 \n  BRB   BWA   CAF   CHE   CHL   CHN   CIV   CMR    CN   COL   COM   CPV   CRI \n    4     1     5  1730    65   999     6    10  1279    71     2    24    19 \n  CUB   CYM   CYP   CZE   DEU   DJI   DMA   DNK   DOM   DZA   ECU   EGY   ESP \n    8     1    51   171  7287     1     1   435    14   103    27    32  8568 \n  EST   ETH   FIN   FJI   FRA   FRO   GAB   GBR   GEO   GGY   GHA   GIB   GLP \n   83     3   447     1 10415     5     4 12129    22     3     4    18     2 \n  GNB   GRC   GTM   GUY   HKG   HND   HRV   HUN   IDN   IMN   IND   IRL   IRN \n    9   128     4     1    29     1   100   230    35     2   152  3375    83 \n  IRQ   ISL   ISR   ITA   JAM   JEY   JOR   JPN   KAZ   KEN   KHM   KIR   KNA \n   14    57   669  3766     6     8    21   197    19     6     2     1     2 \n  KOR   KWT   LAO   LBN   LBY   LCA   LIE   LKA   LTU   LUX   LVA   MAC   MAR \n  133    16     2    31     8     1     3     7    81   287    55    16   259 \n  MCO   MDG   MDV   MEX   MKD   MLI   MLT   MMR   MNE   MOZ   MRT   MUS   MWI \n    4     1    12    85    10     1    18     1     5    67     1     7     2 \n  MYS   MYT   NAM   NCL   NGA   NIC   NLD   NOR   NPL  NULL   NZL   OMN   PAK \n   28     2     1     1    34     1  2104   607     1   488    74    18    14 \n  PAN   PER   PHL   PLW   POL   PRI   PRT   PRY   PYF   QAT   ROU   RUS   RWA \n    9    29    40     1   919    12 48590     4     1    15   500   632     2 \n  SAU   SDN   SEN   SGP   SLE   SLV   SMR   SRB   STP   SUR   SVK   SVN   SWE \n   48     1    11    39     1     2     1   101     2     5    65    57  1024 \n  SYC   SYR   TGO   THA   TJK   TMP   TUN   TUR   TWN   TZA   UGA   UKR   UMI \n    2     3     2    59     9     3    39   248    51     5     2    68     1 \n  URY   USA   UZB   VEN   VGB   VNM   ZAF   ZMB   ZWE \n   32  2097     4    26     1     8    80     2     4 \n```\n:::\n:::\n\n\nAs there is NULL value in the country column, it can be removed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset <- dataset %>% \n  filter(!(country == \"NULL\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Class of each column in the dataset.\nsapply(dataset, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                         hotel                    is_canceled \n                   \"character\"                      \"numeric\" \n                     lead_time              arrival_date_year \n                     \"numeric\"                      \"numeric\" \n            arrival_date_month       arrival_date_week_number \n                   \"character\"                      \"numeric\" \n     arrival_date_day_of_month        stays_in_weekend_nights \n                     \"numeric\"                      \"numeric\" \n          stays_in_week_nights                         adults \n                     \"numeric\"                      \"numeric\" \n                      children                         babies \n                     \"numeric\"                      \"numeric\" \n                          meal                        country \n                   \"character\"                    \"character\" \n                market_segment           distribution_channel \n                   \"character\"                    \"character\" \n             is_repeated_guest         previous_cancellations \n                     \"numeric\"                      \"numeric\" \nprevious_bookings_not_canceled             reserved_room_type \n                     \"numeric\"                    \"character\" \n            assigned_room_type                booking_changes \n                   \"character\"                      \"numeric\" \n                  deposit_type                          agent \n                   \"character\"                    \"character\" \n                       company           days_in_waiting_list \n                   \"character\"                      \"numeric\" \n                 customer_type                            adr \n                   \"character\"                      \"numeric\" \n   required_car_parking_spaces      total_of_special_requests \n                     \"numeric\"                      \"numeric\" \n            reservation_status        reservation_status_date \n                   \"character\"                         \"Date\" \n```\n:::\n:::\n\n\nAgents and Company have numerical values but their classes are described as character. Hence, the NULL can be modified to NA and the column can be modified to the numerical value. \nArrival date in year, month and day can be combined into a single field arrival date.\n\n\n## Identify variables that need to be mutated\nSome variables that can be mutated.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Mutating arrival date into a single field\n#finding the total number guests.\ndataset_mutate <- dataset %>% \n  mutate(arrival_date = str_c(arrival_date_day_of_month,\n                              arrival_date_month,\n                              arrival_date_year, sep=\"/\"),\n         arrival_date = dmy(arrival_date),\n         total_guests = adults + children + babies) %>% \n  select(-c(arrival_date_day_of_month,arrival_date_month,arrival_date_year))\ndataset_mutate\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 118,902 x 31\n   hotel        is_canceled lead_time arrival_date_week_number stays_in_weekend~\n   <chr>              <dbl>     <dbl>                    <dbl>             <dbl>\n 1 Resort Hotel           0       342                       27                 0\n 2 Resort Hotel           0       737                       27                 0\n 3 Resort Hotel           0         7                       27                 0\n 4 Resort Hotel           0        13                       27                 0\n 5 Resort Hotel           0        14                       27                 0\n 6 Resort Hotel           0        14                       27                 0\n 7 Resort Hotel           0         0                       27                 0\n 8 Resort Hotel           0         9                       27                 0\n 9 Resort Hotel           1        85                       27                 0\n10 Resort Hotel           1        75                       27                 0\n# ... with 118,892 more rows, and 26 more variables:\n#   stays_in_week_nights <dbl>, adults <dbl>, children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(dataset_mutate$arrival_date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. \n\"2015-07-01\" \"2016-03-14\" \"2016-09-07\" \"2016-08-29\" \"2017-03-19\" \"2017-08-31\" \n```\n:::\n:::\n\n\n\nWe can see that the arrival date mostly lie between the July 2015- August 2017. \n\n\nAs described above, the type of the agent and company can be changed from character to numeric.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Mutating the class of the agent and company field from character to numeric\ndataset_mutate <- dataset_mutate %>%\n  mutate(across(c(agent, company),~ replace(.,str_detect(., \"NULL\"), NA))) %>% mutate_at(vars(agent, company),as.numeric)\n```\n:::\n\n\nIs agent field numeric?\n\n::: {.cell}\n\n```{.r .cell-code}\nis.numeric(dataset_mutate$agent)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\nIs company field numeric?\n\n::: {.cell}\n\n```{.r .cell-code}\nis.numeric(dataset_mutate$company)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}